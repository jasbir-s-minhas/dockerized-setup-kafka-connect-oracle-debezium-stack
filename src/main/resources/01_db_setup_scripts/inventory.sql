-- Create and populate our products using a single insert with many rows
CREATE TABLE products
(
    id          NUMBER(4) GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 101) NOT NULL PRIMARY KEY,
    name        VARCHAR2(255) NOT NULL,
    description VARCHAR2(512),
    weight      FLOAT
);
GRANT SELECT ON products TO c##dbzuser;
ALTER TABLE products
    ADD SUPPLEMENTAL LOG DATA (ALL) COLUMNS;

-- Create and populate the products on hand using multiple inserts
CREATE TABLE products_on_hand
(
    product_id NUMBER(4) NOT NULL PRIMARY KEY,
    quantity   NUMBER(4) NOT NULL,
    FOREIGN KEY (product_id) REFERENCES products (id)
);
GRANT SELECT ON products_on_hand TO c##dbzuser;
ALTER TABLE products_on_hand
    ADD SUPPLEMENTAL LOG DATA (ALL) COLUMNS;


-- Create some customers ...
CREATE TABLE customers
(
    id         NUMBER(4) GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 1001) NOT NULL PRIMARY KEY,
    first_name VARCHAR2(255) NOT NULL,
    last_name  VARCHAR2(255) NOT NULL,
    email      VARCHAR2(255) NOT NULL UNIQUE
);
GRANT SELECT ON customers TO c##dbzuser;
ALTER TABLE customers
    ADD SUPPLEMENTAL LOG DATA (ALL) COLUMNS;


-- Create some very simple orders
CREATE TABLE orders
(
    id         NUMBER(6) GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 10001) NOT NULL PRIMARY KEY,
    order_date DATE NOT NULL,
    purchaser  NUMBER(4) NOT NULL,
    quantity   NUMBER(4) NOT NULL,
    product_id NUMBER(4) NOT NULL,
    FOREIGN KEY (purchaser) REFERENCES customers (id),
    FOREIGN KEY (product_id) REFERENCES products (id)
);
GRANT SELECT ON orders TO c##dbzuser;
ALTER TABLE orders
    ADD SUPPLEMENTAL LOG DATA (ALL) COLUMNS;


-- Create a table to track suppliers
CREATE TABLE suppliers
(
    supplier_id    NUMBER(4) GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 1) NOT NULL PRIMARY KEY,
    supplier_name  VARCHAR2(255) NOT NULL,
    contact_person VARCHAR2(255),
    contact_email  VARCHAR2(255) UNIQUE
);
GRANT
    SELECT
    ON
    suppliers TO c##dbzuser;
ALTER TABLE suppliers
    ADD SUPPLEMENTAL LOG DATA (ALL) COLUMNS;


-- Create a table to track shipments from suppliers
CREATE TABLE shipments
(
    shipment_id   NUMBER(6) GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 20001) NOT NULL PRIMARY KEY,
    shipment_date DATE NOT NULL,
    supplier_id   NUMBER(4) NOT NULL,
    product_id    NUMBER(4) NOT NULL,
    quantity      NUMBER(4) NOT NULL,
    FOREIGN KEY (supplier_id) REFERENCES suppliers (supplier_id),
    FOREIGN KEY (product_id) REFERENCES products (id)
);
GRANT SELECT ON shipments TO c##dbzuser;
ALTER TABLE shipments
    ADD SUPPLEMENTAL LOG DATA (ALL) COLUMNS;


-- Create a table to track product categories
CREATE TABLE product_categories
(
    category_id   NUMBER(4) GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 1) NOT NULL PRIMARY KEY,
    category_name VARCHAR2(255) NOT NULL
);

GRANT SELECT ON product_categories TO c##dbzuser;
ALTER TABLE product_categories
    ADD SUPPLEMENTAL LOG DATA (ALL) COLUMNS;


-- Create a table to associate products with categories
CREATE TABLE product_category_mapping
(
    product_id  NUMBER(4) NOT NULL,
    category_id NUMBER(4) NOT NULL,
    PRIMARY KEY (product_id, category_id),
    FOREIGN KEY (product_id) REFERENCES products (id),
    FOREIGN KEY (category_id) REFERENCES product_categories (category_id)
);
GRANT SELECT ON product_category_mapping TO c##dbzuser;
ALTER TABLE product_category_mapping
    ADD SUPPLEMENTAL LOG DATA (ALL) COLUMNS;


-- Create a table to track product reviews
CREATE TABLE product_reviews
(
    review_id     NUMBER(6) GENERATED BY DEFAULT ON NULL AS IDENTITY (START WITH 40001) NOT NULL PRIMARY KEY,
    product_id    NUMBER(4) NOT NULL,
    review_text   VARCHAR2(1000),
    rating        NUMBER(1, 0) CHECK (rating >= 1 AND rating <= 5),
    reviewer_name VARCHAR2(255),
    FOREIGN KEY (product_id) REFERENCES products (id)
);
GRANT SELECT ON product_reviews TO c##dbzuser;
ALTER TABLE product_reviews
    ADD SUPPLEMENTAL LOG DATA (ALL) COLUMNS;


